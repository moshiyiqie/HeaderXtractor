<type 'numpy.ndarray'>
采样长度: 9915
采样: [[ 0.          0.2         0.         ...,  0.          1.          0.        ]
 [ 1.          0.26086957  0.         ...,  1.          0.33333333  0.        ]
 [ 1.          0.71428571  0.         ...,  0.          0.28571429  0.        ]
 ..., 
 [ 0.          0.15384615  0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 1.          0.66666667  0.         ...,  0.          0.33333333  0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9853
采样: [[ 0.          0.125       0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          1.          0.         ...,  3.          0.25        0.        ]
 ..., 
 [ 0.          1.          0.         ...,  2.          0.25        0.        ]
 [ 0.          0.16666667  0.         ...,  0.          1.          0.        ]
 [ 1.          0.8         0.         ...,  0.          0.25        0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9909
采样: [[ 1.          0.17857143  0.         ...,  0.          0.8         0.        ]
 [ 4.          0.5         1.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.5         1.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.71428571  0.         ...,  3.          0.33333333  0.        ]
 [ 0.          0.34482759  0.         ...,  0.          0.66666667  0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9929
采样: [[ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.0625      0.         ...,  0.          1.          0.        ]
 [ 0.          0.375       0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 1.          1.          0.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.34615385  0.         ...,  1.          0.66666667  0.        ]
 [ 0.          0.4         0.         ...,  0.          0.8         0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9887
采样: [[ 0.          0.06666667  0.         ...,  0.          1.          0.        ]
 [ 1.          0.44444444  0.         ...,  0.          1.          0.        ]
 [ 0.          0.3125      0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 0.          0.11111111  0.         ...,  0.          1.          0.        ]
 [ 0.          0.1875      0.         ...,  0.          1.          0.        ]
 [ 0.          0.66666667  0.         ...,  0.          0.33333333  0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9859
采样: [[ 1.          0.42857143  0.         ...,  4.          0.54545455  0.        ]
 [ 0.          0.5         1.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.25        0.         ...,  0.          0.8         0.        ]
 [ 0.          0.08333333  0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.33333333  0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9922
采样: [[ 0.          0.33333333  0.         ...,  1.          0.5         0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          1.          0.         ...,  4.          0.2         0.        ]
 ..., 
 [ 0.          0.33333333  0.         ...,  1.          0.75        0.        ]
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          0.30769231  0.         ...,  0.          1.          0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9844
采样: [[ 0.          0.28571429  0.         ...,  0.          0.83333333  0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.33333333  0.         ...,  0.          0.66666667  0.        ]
 [ 2.          0.4         0.         ...,  0.          0.6         0.        ]
 [ 0.          1.          0.         ...,  2.          0.25        0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9884
采样: [[ 0.          1.          0.         ...,  1.          0.5         0.        ]
 [ 0.          0.01612903  0.         ...,  1.          0.5         0.        ]
 [ 0.          0.4375      0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  1.          0.5         0.        ]
 [ 1.          0.29411765  0.         ...,  0.          1.          0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9867
采样: [[ 0.          0.33333333  0.         ...,  0.          0.75        0.        ]
 [ 0.          0.38461538  0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.28571429  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.3         0.         ...,  0.          1.          0.        ]
 [ 0.          0.28571429  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9887
采样: [[ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.25        0.         ...,  2.          0.61538462  0.        ]
 [ 0.          0.30769231  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          0.27777778  0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9842
采样: [[ 1.          0.29411765  0.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.4         0.         ...,  0.          0.75        0.        ]
 [ 0.          1.          0.         ...,  0.          0.33333333  0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9908
采样: [[ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.21428571  0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.44444444  0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9873
采样: [[ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         1.         ...,  1.          0.2         0.        ]
 ..., 
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.23076923  0.         ...,  0.          1.          0.        ]
 [ 0.          0.25        0.         ...,  0.          0.5         0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9842
采样: [[ 1.          0.66666667  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]
 [ 0.          0.27777778  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.23076923  0.         ...,  0.          1.          0.        ]
 [ 0.          0.18181818  0.         ...,  0.          1.          0.        ]
 [ 0.          0.23076923  0.         ...,  0.          0.5         0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9915
采样: [[ 1.          0.5         0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 1.          0.14285714  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 2.          0.44444444  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.27777778  0.         ...,  2.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9856
采样: [[ 0.          0.66666667  1.         ...,  0.          0.33333333  0.        ]
 [ 2.          0.35        0.         ...,  1.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         0.         ...,  0.          0.75        0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9889
采样: [[ 1.          0.4         0.         ...,  1.          0.5         0.        ]
 [ 0.          0.25        0.         ...,  0.          0.4         0.        ]
 [ 1.          0.21428571  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 1.          0.5         0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.15384615  0.         ...,  0.          0.66666667  0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9855
采样: [[ 0.          0.33333333  0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.5         0.         ...,  1.          1.          0.        ]
 [ 0.          0.28571429  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.25        0.         ...,  0.          0.75        0.        ]
 [ 0.          0.25        0.         ...,  0.          0.83333333  0.        ]
 [ 0.          0.5         0.         ...,  0.          0.66666667  0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9892
采样: [[ 1.          0.22222222  0.         ...,  0.          0.8         0.        ]
 [ 2.          0.375       0.         ...,  2.          0.25        0.        ]
 [ 0.          0.375       0.         ...,  0.          1.          0.        ]
 ..., 
 [ 2.          0.5         0.         ...,  0.          0.42857143  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9919
采样: [[ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 1.          0.42857143  0.         ...,  3.          0.6         0.        ]
 [ 1.          0.83333333  0.         ...,  0.          0.4         0.        ]
 ..., 
 [ 1.          0.5         1.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.26666667  0.         ...,  3.          0.6         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9844
采样: [[ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          0.05555556  0.         ...,  0.          1.          0.        ]
 [ 0.          0.54545455  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.4         0.         ...,  0.          0.75        0.        ]
 [ 1.          0.5         1.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9886
采样: [[ 0.          0.16666667  0.         ...,  0.          1.          0.        ]
 [ 0.          0.15789474  0.         ...,  0.          1.          0.        ]
 [ 1.          0.46153846  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.25        0.         ...,  0.          0.6         0.        ]
 [ 0.          0.3125      0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9848
采样: [[ 0.          0.26666667  0.         ...,  1.          1.          0.        ]
 [ 0.          0.3         0.         ...,  1.          1.          0.        ]
 [ 1.          0.11111111  0.         ...,  0.          0.66666667  0.        ]
 ..., 
 [ 0.          0.42857143  0.         ...,  0.          1.          0.        ]
 [ 0.          0.66666667  0.         ...,  0.          0.4         0.        ]
 [ 0.          0.46153846  0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9904
采样: [[ 0.          0.42857143  0.         ...,  1.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.6         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         0.         ...,  1.          0.6         0.        ]
 [ 0.          0.75        0.         ...,  0.          0.5         0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9926
采样: [[ 0.          0.75        0.         ...,  0.          0.25        0.        ]
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.0625      0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.57142857  0.         ...,  2.          0.66666667  0.        ]
 [ 0.          0.44444444  0.         ...,  0.          0.5         0.        ]
 [ 1.          0.5         1.         ...,  0.          0.2         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9922
采样: [[ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.16666667  0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.71428571  0.         ...,  3.          0.16666667  0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9862
采样: [[ 0.          0.33333333  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          1.          0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9877
采样: [[ 0.          0.66666667  0.         ...,  0.          1.          0.        ]
 [ 0.          0.33333333  0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.44444444  0.         ...,  1.          0.4         0.        ]
 ..., 
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9876
采样: [[ 0.   0.2  0.  ...,  1.   1.   0. ]
 [ 0.   0.1  0.  ...,  1.   1.   0. ]
 [ 0.   0.8  0.  ...,  0.   0.5  0. ]
 ..., 
 [ 0.   1.   0.  ...,  0.   0.5  0. ]
 [ 0.   0.2  0.  ...,  0.   0.9  0. ]
 [ 0.   0.3  0.  ...,  1.   1.   0. ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9838
采样: [[ 0.          0.5         0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.18181818  0.         ...,  0.          0.8         0.        ]
 ..., 
 [ 1.          0.33333333  0.         ...,  2.          0.5         0.        ]
 [ 0.          0.25        0.         ...,  0.          0.66666667  1.        ]
 [ 0.          0.2         0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9869
采样: [[ 0.          0.33333333  0.         ...,  0.          0.75        0.        ]
 [ 0.          0.25        0.         ...,  0.          0.5         0.        ]
 [ 0.          1.          0.         ...,  3.          0.25        0.        ]
 ..., 
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.66666667  0.         ...,  0.          0.33333333  0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9852
采样: [[ 1.          0.66666667  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.58333333  0.         ...,  3.          0.375       0.        ]
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.22222222  0.         ...,  0.          1.          0.        ]
 [ 4.          0.44444444  0.         ...,  0.          0.42857143  0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9895
采样: [[ 0.          0.15384615  0.         ...,  0.          1.          0.        ]
 [ 0.          0.36363636  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.16216216  0.         ...,  2.          1.          0.        ]
 ..., 
 [ 1.          0.21428571  0.         ...,  3.          0.66666667  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9864
采样: [[ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.21052632  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.375       0.         ...,  1.          0.5         0.        ]
 [ 0.          0.41176471  0.         ...,  0.          1.          0.        ]
 [ 0.          0.22222222  0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9867
采样: [[ 0.          0.2         0.         ...,  0.          1.          0.        ]
 [ 0.          0.1875      0.         ...,  0.          1.          0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  1.          1.          0.        ]
 [ 0.          0.14285714  0.         ...,  0.          1.          0.        ]
 [ 1.          0.21052632  0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9930
采样: [[ 1.          0.66666667  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.2         0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.2         0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  2.          0.5         0.        ]
 [ 0.          0.07142857  0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9923
采样: [[ 0.          1.          0.         ...,  0.          0.33333333  0.        ]
 [ 0.          0.2         0.         ...,  0.          0.75        0.        ]
 [ 0.          0.6         0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.33333333  0.         ...,  1.          0.75        0.        ]
 [ 0.          0.33333333  1.         ...,  0.          0.5         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9933
采样: [[ 0.          0.33333333  1.         ...,  0.          0.5         0.        ]
 [ 0.          0.10526316  0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.22222222  0.         ...,  0.          1.          0.        ]
 [ 0.          0.66666667  0.         ...,  1.          0.33333333  0.        ]
 [ 0.          0.23076923  0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9855
采样: [[ 0.          1.          0.         ...,  3.          0.25        0.        ]
 [ 1.          0.21052632  0.         ...,  0.          0.6         0.        ]
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          1.          0.         ...,  2.          0.25        0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]
 [ 0.          0.4         0.         ...,  0.          0.8         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9854
采样: [[ 0.          0.6         0.         ...,  0.          0.4         0.        ]
 [ 0.          0.22222222  0.         ...,  0.          1.          0.        ]
 [ 3.          0.47368421  1.         ...,  3.          0.2         0.        ]
 ..., 
 [ 0.          0.28571429  0.         ...,  0.          1.          0.        ]
 [ 1.          0.3         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         1.         ...,  0.          0.33333333  0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9894
采样: [[ 1.          0.5         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.5         0.         ...,  0.          0.33333333  0.        ]
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 0.          0.38461538  0.         ...,  0.          1.          0.        ]
 [ 0.          0.33333333  0.         ...,  0.          0.5         0.        ]
 [ 0.          0.66666667  0.         ...,  1.          0.5         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9873
采样: [[ 0.          0.4         0.         ...,  0.          0.5         0.        ]
 [ 0.          0.15        0.         ...,  0.          1.          0.        ]
 [ 0.          0.23076923  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.44444444  0.         ...,  1.          1.          0.        ]
 [ 1.          0.6         0.         ...,  0.          0.5         1.        ]
 [ 1.          0.4         0.         ...,  0.          0.66666667  0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9921
采样: [[ 0.          0.25        0.         ...,  0.          0.5         0.        ]
 [ 0.          0.25        0.         ...,  0.          1.          0.        ]
 [ 0.          0.75        0.         ...,  1.          0.4         0.        ]
 ..., 
 [ 0.          1.          0.         ...,  0.          0.5         0.        ]
 [ 0.          0.25        0.         ...,  0.          0.75        0.        ]
 [ 0.          0.15789474  0.         ...,  0.          1.          0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9927
采样: [[ 0.          0.28571429  0.         ...,  0.          1.          0.        ]
 [ 0.          0.35714286  0.         ...,  0.          0.4         0.        ]
 [ 0.          0.25        0.         ...,  0.          0.8         0.        ]
 ..., 
 [ 0.          0.5         0.         ...,  0.          0.75        0.        ]
 [ 0.          0.14285714  0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          1.          0.        ]]
用1算法
<type 'numpy.ndarray'>
采样长度: 9900
采样: [[ 1.          0.16666667  0.         ...,  0.          1.          0.        ]
 [ 0.          0.35294118  0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 1.          0.6         1.         ...,  0.          0.25        1.        ]
 [ 0.          1.          0.         ...,  2.          0.25        0.        ]
 [ 0.          0.26666667  0.         ...,  0.          1.          0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9932
采样: [[ 0.          0.17857143  0.         ...,  1.          1.          0.        ]
 [ 0.          0.12        0.         ...,  0.          1.          0.        ]
 [ 0.          0.33333333  1.         ...,  0.          0.33333333  0.        ]
 ..., 
 [ 0.          0.30769231  0.         ...,  0.          1.          0.        ]
 [ 0.          0.23076923  0.         ...,  0.          1.          0.        ]
 [ 0.          0.27272727  0.         ...,  0.          0.5         0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9855
采样: [[ 1.          0.14285714  0.         ...,  0.          1.          0.        ]
 [ 0.          0.38888889  0.         ...,  1.          0.6         0.        ]
 [ 0.          0.33333333  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.07692308  0.         ...,  0.          0.5         0.        ]
 [ 1.          0.5         0.         ...,  0.          0.66666667  0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]]
用2算法
<type 'numpy.ndarray'>
采样长度: 9868
采样: [[ 0.          1.          0.         ...,  0.          0.33333333  0.        ]
 [ 0.          1.          0.         ...,  0.          1.          0.        ]
 [ 1.          0.30769231  0.         ...,  0.          1.          0.        ]
 ..., 
 [ 0.          0.          0.         ...,  0.          1.          0.        ]
 [ 0.          0.14285714  0.         ...,  0.          1.          0.        ]
 [ 0.          0.2         0.         ...,  0.          0.8         0.        ]]
用0算法
<type 'numpy.ndarray'>
采样长度: 9915
采样: [[ 0.          1.          0.         ...,  3.          0.25        0.        ]
 [ 0.          0.44444444  0.         ...,  0.          1.          0.        ]
 [ 0.          0.5         0.         ...,  0.          0.5         0.        ]
 ..., 
 [ 0.          0.125       0.         ...,  0.          1.          0.        ]
 [ 0.          0.23529412  0.         ...,  0.          1.          0.        ]
 [ 0.          0.          0.         ...,  0.          1.          0.        ]]
用0算法
正在处理第0个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.0188413453073
alpha  1.97634025022
sum: [-1.97634025 -1.97634025 -1.97634025 ..., -1.97634025 -1.97634025
 -1.97634025]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第1个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.267425243709
alpha  0.503862663774
sum: [-2.48020291 -2.48020291 -2.48020291 ..., -2.48020291 -2.48020291
 -2.48020291]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第2个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.49324879357
alpha  0.0135032335137
sum: [-2.49370615 -2.49370615 -2.49370615 ..., -2.49370615 -2.49370615
 -2.49370615]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第3个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第4个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第5个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第6个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第7个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第8个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第9个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.495323018071
alpha  0.00935423668615
sum: [-2.50306038 -2.50306038 -2.50306038 ..., -2.50306038 -2.50306038
 -2.50306038]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第10个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.499716842002
alpha  0.000566316055924
sum: [-2.5036267 -2.5036267 -2.5036267 ..., -2.5036267 -2.5036267 -2.5036267]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第11个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第12个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第13个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第14个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.499951598239
alpha  9.68035214862e-05
sum: [-2.5037235 -2.5037235 -2.5037235 ..., -2.5037235 -2.5037235 -2.5037235]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第15个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第16个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第17个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第18个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第19个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第20个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第21个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第22个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第23个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第24个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第25个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第26个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第27个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第28个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第29个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第30个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.490051926773
alpha  0.0198987724191
sum: [-2.52362228 -2.52362228 -2.52362228 ..., -2.52362228 -2.52362228
 -2.52362228]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第31个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
e value: 0.496697870021
alpha  0.00660435597726
sum: [-2.53022663 -2.53022663 -2.53022663 ..., -2.53022663 -2.53022663
 -2.53022663]
错误数: 877
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

正在处理第32个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第33个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第34个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第35个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第36个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第37个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第38个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第39个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第40个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第41个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第42个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第43个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第44个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第45个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第46个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第47个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第48个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
正在处理第49个分类器
W sum 1.0
sg, [-1. -1. -1. ..., -1. -1. -1.]
self.y_test, [-1. -1. -1. ..., -1. -1. -1.]
误差率过大，作废
i: 0
i: 1
i: 2
i: 9
i: 10
i: 14
i: 30
i: 31
             precision    recall  f1-score   support

       -1.0       0.99      0.99      0.99      5229
        1.0       0.86      0.91      0.88       450

avg / total       0.98      0.98      0.98      5679

